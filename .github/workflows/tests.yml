name: Test

on:
  workflow_dispatch:
    inputs:
      build_run_id:
        description: 'Build workflow run ID to test (leave empty for latest successful)'
        required: false
  workflow_run:
    workflows: ["Build"]
    types:
      - completed
  push:
    branches:
      - build

jobs:
  test-wheels:
    runs-on: ${{ matrix.os }}
    if: ${{ github.event.workflow_run.conclusion == 'success' || github.event_name == 'workflow_dispatch' || github.event_name == 'push' }}
    defaults:
      run:
        shell: bash
    strategy:
      fail-fast: false
      matrix:
        # https://docs.github.com/en/actions/reference/runners/github-hosted-runners#standard-github-hosted-runners-for-public-repositories
        os: [ubuntu-22.04, ubuntu-24.04, windows-2022, windows-2025, macos-13, macos-14, macos-15, macos-26]
        # Status of Python versions (https://devguide.python.org/versions/)
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]

    steps:
      - uses: actions/checkout@v5

      - name: Install just
        uses: taiki-e/install-action@just

      - name: Install uv and set the python version
        uses: astral-sh/setup-uv@v6
        with:
          python-version: ${{ matrix.python-version }}

      - name: Get build run ID
        id: get-run-id
        run: |
          if [[ "${{ github.event_name }}" == "workflow_dispatch" && "${{ inputs.build_run_id }}" != "" ]]; then
            echo "run_id=${{ inputs.build_run_id }}" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event_name }}" == "workflow_run" ]]; then
            echo "run_id=${{ github.event.workflow_run.id }}" >> $GITHUB_OUTPUT
          else
            # Get latest successful build run
            RUN_ID=$(gh api repos/${{ github.repository }}/actions/workflows/build.yml/runs \
              --jq '.workflow_runs[] | select(.conclusion == "success") | .id' | head -1)
            echo "run_id=$RUN_ID" >> $GITHUB_OUTPUT
          fi
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Set artifact name
        id: artifact
        run: |
          case "${{ matrix.os }}" in
            ubuntu-*) echo "name=wheels-linux" >> $GITHUB_OUTPUT ;;
            windows-*) echo "name=wheels-windows" >> $GITHUB_OUTPUT ;;
            macos-13) echo "name=wheels-macos-intel" >> $GITHUB_OUTPUT ;;
            macos-*) echo "name=wheels-macos-arm" >> $GITHUB_OUTPUT ;;
            *) echo "Unexpected OS: ${{ matrix.os }}" 1>&2; exit 1 ;;
          esac

      - name: Download wheel
        run: |
          # gh run download ${{ steps.get-run-id.outputs.run_id }} --name wheels --dir wheels/
          gh run download ${{ steps.get-run-id.outputs.run_id }} --name ${{ steps.artifact.outputs.name }} --dir wheels/
          ls -l wheels/
        env:
          GH_TOKEN: ${{ github.token }}

      - name: Setup tests
        run: |
          just setup-tests

      - name: Run tests
        run: |
          just test-package -v
